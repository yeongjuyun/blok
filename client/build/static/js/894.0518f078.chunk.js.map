{"version":3,"file":"static/js/894.0518f078.chunk.js","mappings":"qPAIMA,EAAYC,EAAAA,GAAAA,IAAH,2MACO,SAACC,GAAD,OAAWA,EAAMC,SAASC,cAC/B,SAACF,GAAD,OAAWA,EAAMG,QACvB,SAACH,GAAD,OAAWA,EAAMC,SAASG,WAUxBC,EAASN,EAAAA,GAAAA,IAAH,iOAYbO,EAAMP,EAAAA,GAAAA,IAAH,2JAUHQ,EAAgBR,EAAAA,GAAAA,IAAH,qEAKbS,EAAUT,EAAAA,GAAAA,IAAH,0MAGF,SAACC,GAAD,OAAWA,EAAMC,SAASQ,WAS/BC,EAASX,EAAAA,GAAAA,KAAH,yJAUNY,EAAOZ,EAAAA,GAAAA,IAAH,gHACC,SAACC,GAAD,OAAWA,EAAMC,SAASG,WAO/BQ,EAASb,EAAAA,GAAAA,OAAH,yUACU,SAACC,GAAD,OAAWA,EAAMC,SAASQ,WAkB1CI,EAAkBd,EAAAA,GAAAA,KAAH,yJAGV,SAACC,GAAD,OAAWA,EAAMC,SAASQ,WAOrC,SAASK,EAAiBC,EAAgBC,EAAiBf,GACzD,IAAIgB,EAAS,GAEb,GAAIF,EAAOG,SAASF,GAAU,CAE5B,IADA,IAAMG,EAAmBJ,EAAOK,MAAMJ,GAC7BK,EAAI,EAAGA,EAAIF,EAAiBG,OAAS,EAAGD,IAC/CJ,EAAOM,MACL,iCACE,SAACb,EAAD,UAA8BS,EAAiBE,IAA/C,UAAgBA,EAAhB,cACA,SAACR,EAAD,CAA8CZ,SAAUA,EAAxD,SACGe,GADH,UAAyBK,EAAzB,yBAMNJ,EAAOM,MACL,SAACb,EAAD,UACGS,EAAiBA,EAAiBG,OAAS,IAD9C,UAAgBN,EAAhB,mBAKFC,EAAOM,MAAK,SAACb,EAAD,UAAmCK,GAAnC,UAAgBC,EAAhB,aAGd,OAAOC,EAAOO,KAAI,SAACC,GAAD,OAAUA,KAGf,SAASC,EAAU1B,GAAwB,IAAD,cAC/C2B,EAAkB3B,EAAlB2B,QAASC,EAAS5B,EAAT4B,KACjB,GAAiCC,EAAAA,EAAAA,IAAgB,CAAEF,QAAAA,EAASC,KAAAA,IAApD3B,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,KAAM2B,EAAxB,EAAwBA,KAKxB,OACE,+BACE,UAAChC,EAAD,CAAWG,SAAUA,EAAUE,KAAMA,EAAM4B,GAAE,UAAED,EAAKE,gBAAP,QAAmB,GAAhE,UACG,UAAAF,EAAKG,aAAL,SAAYC,KACX,SAAC5B,EAAD,CAAK4B,IAAKJ,EAAKG,MAAMC,IAAKC,IAAG,UAAEL,EAAKG,MAAME,WAAb,QAAoB,MAEjD,SAAC9B,EAAD,CAAQ+B,MAAO,CAAEC,YAAa,QAA9B,0FAIF,UAAC9B,EAAD,YACG,UAAAuB,EAAKQ,eAAL,eAAcC,SACb,SAAC/B,EAAD,CAASP,SAAUA,EAAnB,SAA8B6B,EAAKQ,QAAQC,SAE7C,0BACG,UAAAT,EAAKf,cAAL,eAAawB,SACXT,EAAKU,gBACJ1B,EACEgB,EAAKf,OAAOwB,MACZT,EAAKU,gBAAgBD,MACrBtC,IAGF,SAACS,EAAD,UAASoB,EAAKf,OAAOwB,YAG1B,UAAAT,EAAKW,YAAL,eAAWF,SACV,SAAC5B,EAAD,CAAMV,SAAUA,EAAhB,SAA2B6B,EAAKW,KAAKF,SAEtC,UAAAT,EAAKY,cAAL,eAAaC,SACZ,SAAC/B,EAAD,CACEX,SAAUA,EACV2C,MAAO3C,EAASQ,QAChBoC,QApCZ,WAA0B,IAAD,EACvBC,OAAOC,SAASC,KAAO,UAAAlB,EAAKY,cAAL,SAAaO,IAAMnB,EAAKY,OAAOO,IAAM,IAgCpD,SAKGnB,EAAKY,OAAOC","sources":["components/Blocks/Simple/Feature/SiteBlock.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { SiteBlockProps, ColorSet } from '../../blockValidator';\nimport { SiteBlockByType } from '../../../../reducers/HostReducer';\n\nconst Container = styled.div<{ colorSet: ColorSet; font: string }>`\n  background-color: ${(props) => props.colorSet.background};\n  font-family: ${(props) => props.font};\n  color: ${(props) => props.colorSet.surface};\n\n  padding: 100px 10px;\n  margin: 0 auto;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ImgDiv = styled.div`\n  width: 300px;\n  height: 200px;\n  background-color: #efefef;\n  text-align: center;\n  line-height: 200px;\n  @media screen and (max-width: 1120px) {\n    width: 400px;\n    padding-right: 0;\n  }\n`;\n\nconst Img = styled.img`\n  width: 300px;\n  padding-right: 10px;\n  padding-top: 30px;\n\n  @media screen and (max-width: 1120px) {\n    width: 27vw;\n  }\n`;\n\nconst TextContainer = styled.div`\n  vertical-align: middle;\n  padding: 40px;\n`;\n\nconst Caption = styled.div<{ colorSet: ColorSet }>`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${(props) => props.colorSet.primary};\n  margin-bottom: 10px;\n\n  @media screen and (max-width: 1120px) {\n    font-size: 1.4vw;\n    margin-bottom: 1vw;\n  }\n`;\n\nconst Header = styled.span`\n  font-size: 2rem;\n  font-weight: 700;\n  color: black;\n\n  @media screen and (max-width: 1120px) {\n    font-size: 3vw;\n  }\n`;\n\nconst Body = styled.div<{ colorSet: ColorSet }>`\n  color: ${(props) => props.colorSet.surface};\n\n  @media screen and (max-width: 1120px) {\n    font-size: 1.3vw;\n  }\n`;\n\nconst Button = styled.button<{ colorSet: ColorSet }>`\n  background-color: ${(props) => props.colorSet.primary};\n  color: white;\n  padding: 10px 20px;\n  border: 0;\n  border-radius: 7px;\n  font-size: 1rem;\n  margin-top: 20px;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 1120px) {\n    font-size: 1.4vw;\n    padding: 1vw 2vw;\n    margin-top: 1.2vw;\n  }\n`;\nconst HeaderHighlight = styled.span<{ colorSet: ColorSet }>`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${(props) => props.colorSet.primary};\n\n  @media screen and (max-width: 1120px) {\n    font-size: 2.8vw;\n  }\n`;\n\nfunction highlightHandler(header: string, keyword: string, colorSet: ColorSet) {\n  let result = [];\n\n  if (header.includes(keyword)) {\n    const splitedByKeyword = header.split(keyword);\n    for (let i = 0; i < splitedByKeyword.length - 1; i++) {\n      result.push(\n        <>\n          <Header key={`${i}-keyword`}>{splitedByKeyword[i]}</Header>\n          <HeaderHighlight key={`${i}-HeaderHighlight`} colorSet={colorSet}>\n            {keyword}\n          </HeaderHighlight>\n        </>\n      );\n    }\n    result.push(\n      <Header key={`${keyword}-keyword`}>\n        {splitedByKeyword[splitedByKeyword.length - 1]}\n      </Header>\n    );\n  } else {\n    result.push(<Header key={`${keyword}-header`}>{header}</Header>);\n  }\n\n  return result.map((item) => item);\n}\n\nexport default function SiteBlock(props: SiteBlockProps) {\n  const { blockId, type } = props;\n  const { colorSet, font, data } = SiteBlockByType({ blockId, type });\n\n  function buttonHandler() {\n    window.location.href = data.button?.url ? data.button.url : '';\n  }\n  return (\n    <>\n      <Container colorSet={colorSet} font={font} id={data.navTitle ?? ''}>\n        {data.image?.src ? (\n          <Img src={data.image.src} alt={data.image.alt ?? ''} />\n        ) : (\n          <ImgDiv style={{ marginRight: '20px' }}>\n            여기에 이미지가 보여집니다.\n          </ImgDiv>\n        )}\n        <TextContainer>\n          {data.caption?.value && (\n            <Caption colorSet={colorSet}>{data.caption.value}</Caption>\n          )}\n          <div>\n            {data.header?.value &&\n              (data.headerHighlight ? (\n                highlightHandler(\n                  data.header.value,\n                  data.headerHighlight.value,\n                  colorSet\n                )\n              ) : (\n                <Header>{data.header.value}</Header>\n              ))}\n          </div>\n          {data.body?.value && (\n            <Body colorSet={colorSet}>{data.body.value}</Body>\n          )}\n          {data.button?.title && (\n            <Button\n              colorSet={colorSet}\n              color={colorSet.primary}\n              onClick={buttonHandler}\n            >\n              {data.button.title}\n            </Button>\n          )}\n        </TextContainer>\n      </Container>\n    </>\n  );\n}\n"],"names":["Container","styled","props","colorSet","background","font","surface","ImgDiv","Img","TextContainer","Caption","primary","Header","Body","Button","HeaderHighlight","highlightHandler","header","keyword","result","includes","splitedByKeyword","split","i","length","push","map","item","SiteBlock","blockId","type","SiteBlockByType","data","id","navTitle","image","src","alt","style","marginRight","caption","value","headerHighlight","body","button","title","color","onClick","window","location","href","url"],"sourceRoot":""}