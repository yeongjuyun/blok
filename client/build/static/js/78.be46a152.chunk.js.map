{"version":3,"file":"static/js/78.be46a152.chunk.js","mappings":"kNAIMA,EAAYC,EAAAA,GAAAA,IAAH,+NACO,SAACC,GAAD,OAAWA,EAAMC,SAASC,cAC/B,SAACF,GAAD,OAAWA,EAAMG,QACvB,SAACH,GAAD,OAAWA,EAAMC,SAASG,WAW/BC,EAAgBN,EAAAA,GAAAA,IAAH,qKAUbO,EAAUP,EAAAA,GAAAA,IAAH,iLAGF,SAACC,GAAD,OAAWA,EAAMC,SAASM,WAQ/BC,EAAST,EAAAA,GAAAA,KAAH,2JAUNU,EAAOV,EAAAA,GAAAA,IAAH,qIACC,SAACC,GAAD,OAAWA,EAAMC,SAASG,WAQrC,SAASM,EAAiBC,EAAgBC,EAAiBX,GACzD,IAAMY,EAAkBd,EAAAA,GAAAA,KAAH,gMAGVE,EAASM,SAQhBO,EAAS,GAEb,GAAIH,EAAOI,SAASH,GAAU,CAE5B,IADA,IAAMI,EAAmBL,EAAOM,MAAML,GAC7BM,EAAI,EAAGA,EAAIF,EAAiBG,OAAS,EAAGD,IAC/CJ,EAAOM,MACL,iCACE,SAACZ,EAAD,UAASQ,EAAiBE,MAC1B,SAACL,EAAD,UAAkBD,QAIxBE,EAAOM,MACL,SAACZ,EAAD,UAASQ,EAAiBA,EAAiBG,OAAS,WAGtDL,EAAOM,MAAK,SAACZ,EAAD,UAASG,KAGvB,OAAOG,EAAOO,KAAI,SAACC,GAAD,OAAUA,KAGf,SAASC,EAAUvB,GAAwB,IAAD,MAC/CwB,EAAkBxB,EAAlBwB,QAASC,EAASzB,EAATyB,KACjB,GAAiCC,EAAAA,EAAAA,IAAgB,CAAEF,QAAAA,EAASC,KAAAA,IAApDxB,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,KAAMwB,EAAxB,EAAwBA,KAExB,OACE,+BACE,SAAC7B,EAAD,CACEG,SAAUA,EACVE,KAAMA,EACNyB,GAAsB,OAAlBD,EAAKE,SAAoBF,EAAKE,SAAW,GAH/C,UAKE,UAACxB,EAAD,YACG,UAAAsB,EAAKG,eAAL,eAAcC,SACb,SAACzB,EAAD,CAASL,SAAUA,EAAnB,SAA8B0B,EAAKG,QAAQC,SAE7C,0BACG,UAAAJ,EAAKhB,cAAL,eAAaoB,SACXJ,EAAKK,gBACJtB,EACEiB,EAAKhB,OAAOoB,MACZJ,EAAKK,gBAAgBD,MACrB9B,IAGF,SAACO,EAAD,UAASmB,EAAKhB,OAAOoB,YAG1B,UAAAJ,EAAKM,YAAL,eAAWF,SACV,SAACtB,EAAD,CAAMR,SAAUA,EAAhB,SAA2B0B,EAAKM,KAAKF","sources":["components/Blocks/Simple/Feature/Text/SiteBlock.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { SiteBlockProps, ColorSet } from '../../../blockValidator';\nimport { SiteBlockByType } from '../../../../../reducers/HostReducer';\n\nconst Container = styled.div<{ colorSet: ColorSet; font: string }>`\n  background-color: ${(props) => props.colorSet.background};\n  font-family: ${(props) => props.font};\n  color: ${(props) => props.colorSet.surface};\n\n  padding: 160px 40px;\n  margin: 0 auto;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst TextContainer = styled.div`\n  vertical-align: middle;\n  padding-top: 30px;\n  text-align: center;\n\n  @media screen and (max-width: 1120px) {\n    width: 400px;\n  }\n`;\n\nconst Caption = styled.div<{ colorSet: ColorSet }>`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${(props) => props.colorSet.primary};\n  margin-bottom: 15px;\n\n  @media screen and (max-width: 1120px) {\n    font-size: 1.4vw;\n  }\n`;\n\nconst Header = styled.span`\n  font-size: 2rem;\n  font-weight: 700;\n  color: black;\n\n  @media screen and (max-width: 1120px) {\n    font-size: 2.8vw;\n  }\n`;\n\nconst Body = styled.div<{ colorSet: ColorSet }>`\n  color: ${(props) => props.colorSet.surface};\n  margin-top: 15px;\n\n  @media screen and (max-width: 1120px) {\n    font-size: 1.4vw;\n  }\n`;\n\nfunction highlightHandler(header: string, keyword: string, colorSet: ColorSet) {\n  const HeaderHighlight = styled.span`\n    font-size: 2rem;\n    font-weight: 700;\n    color: ${colorSet.primary};\n    margin-bottom: 10px;\n\n    @media screen and (max-width: 1120px) {\n      font-size: 2.8vw;\n    }\n  `;\n\n  let result = [];\n\n  if (header.includes(keyword)) {\n    const splitedByKeyword = header.split(keyword);\n    for (let i = 0; i < splitedByKeyword.length - 1; i++) {\n      result.push(\n        <>\n          <Header>{splitedByKeyword[i]}</Header>\n          <HeaderHighlight>{keyword}</HeaderHighlight>\n        </>\n      );\n    }\n    result.push(\n      <Header>{splitedByKeyword[splitedByKeyword.length - 1]}</Header>\n    );\n  } else {\n    result.push(<Header>{header}</Header>);\n  }\n\n  return result.map((item) => item);\n}\n\nexport default function SiteBlock(props: SiteBlockProps) {\n  const { blockId, type } = props;\n  const { colorSet, font, data } = SiteBlockByType({ blockId, type });\n\n  return (\n    <>\n      <Container\n        colorSet={colorSet}\n        font={font}\n        id={data.navTitle !== null ? data.navTitle : ''}\n      >\n        <TextContainer>\n          {data.caption?.value && (\n            <Caption colorSet={colorSet}>{data.caption.value}</Caption>\n          )}\n          <div>\n            {data.header?.value &&\n              (data.headerHighlight ? (\n                highlightHandler(\n                  data.header.value,\n                  data.headerHighlight.value,\n                  colorSet\n                )\n              ) : (\n                <Header>{data.header.value}</Header>\n              ))}\n          </div>\n          {data.body?.value && (\n            <Body colorSet={colorSet}>{data.body.value}</Body>\n          )}\n        </TextContainer>\n      </Container>\n    </>\n  );\n}\n"],"names":["Container","styled","props","colorSet","background","font","surface","TextContainer","Caption","primary","Header","Body","highlightHandler","header","keyword","HeaderHighlight","result","includes","splitedByKeyword","split","i","length","push","map","item","SiteBlock","blockId","type","SiteBlockByType","data","id","navTitle","caption","value","headerHighlight","body"],"sourceRoot":""}