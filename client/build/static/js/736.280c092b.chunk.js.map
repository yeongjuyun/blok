{"version":3,"file":"static/js/736.280c092b.chunk.js","mappings":"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","sources":["components/Blocks/Simple/Footer/SettingBlock.tsx","components/Card/Card.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { CustomSelect, TextInput } from '../../../Input';\nimport { Card } from '../../../Card/Card';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  updateBlockData,\n  updateTemplate,\n  selectBlockById,\n} from '../../../../reducers/SiteReducer';\nimport type { RootState } from '../../../../reducers/store';\nimport * as icon from '../../../../icons';\nimport { SettingBlockProps, StyleData } from '../../blockValidator';\nimport { getStyleOptions, getCurrentStyleOption } from '../../blockHelper';\n\nfunction SettingBlock({ blockId, onRemove }: SettingBlockProps) {\n  const { id, template, data, isCardOpened } = useSelector((state: RootState) =>\n    selectBlockById(state, blockId)\n  );\n  const styleOptions = getStyleOptions(template);\n  const currentStyle = getCurrentStyleOption(template);\n  const dispatch = useDispatch();\n\n  //Input\n\n  const [navTitle, setNavTitle] = useState(data.navTitle);\n  const [style, setStyle] = useState(currentStyle);\n  const [leftText, setLeftText] = useState(data.leftText?.value);\n  const [rightText, setRightText] = useState(data.rightText?.value);\n  return (\n    <>\n      <Card\n        title=\"Footer\"\n        pinned\n        onRemove={onRemove}\n        icon={icon.Footer}\n        isCardOpened={isCardOpened}\n        blockId={blockId}\n      >\n        <TextInput\n          title=\"메뉴명\"\n          required\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setNavTitle(e.target.value);\n            dispatch(\n              updateBlockData({\n                blockId: id,\n                field: 'navTitle',\n                value: e.target.value,\n              })\n            );\n          }}\n          guideline=\"네비게이션 바에 입력될 메뉴명을 입력하세요.\"\n          value={navTitle}\n        ></TextInput>\n        <CustomSelect\n          title=\"스타일\"\n          required\n          guideline=\"스타일를 선택해주세요.\"\n          placeholder=\"원하는 선택지를 선택해주세요\"\n          options={styleOptions}\n          onChange={(e: StyleData) => {\n            setStyle(e);\n            dispatch(updateTemplate({ blockId: id, newTemplate: e.value }));\n          }}\n          value={style}\n        />\n        <TextInput\n          title=\"왼쪽 텍스트\"\n          required={false}\n          placeholder=\"©2022 Block Inc. All rights reserved\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setLeftText(e.target.value);\n            dispatch(\n              updateBlockData({\n                blockId: id,\n                field: 'leftText',\n                value: { value: e.target.value },\n              })\n            );\n          }}\n          guideline=\"푸터 왼쪽에 들어갈 문구를 입력하세요\"\n          value={leftText}\n        ></TextInput>\n        <TextInput\n          title=\"오른쪽 텍스트\"\n          required={false}\n          placeholder=\"블록\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setRightText(e.target.value);\n            dispatch(\n              updateBlockData({\n                blockId: id,\n                field: 'rightText',\n                value: { value: e.target.value },\n              })\n            );\n          }}\n          guideline=\"푸터 오른쪽에 들어갈 문구를 입력하세요.\"\n          value={rightText}\n        ></TextInput>\n      </Card>\n    </>\n  );\n}\n\nexport default SettingBlock;\n","import styled, { css } from 'styled-components';\nimport * as icon from '../../icons';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleCardState } from '../../reducers/SiteReducer';\n\nexport const CardHeader = styled.div<{ isOpened: boolean }>`\n  background: #ffffff;\n  border: 1px solid #efefef;\n  border-radius: ${(props) =>\n    props.isOpened === true ? '12px 12px 0 0' : '12px'};\n  position: relative;\n  width: 100%;\n  height: 60px;\n  display: flex;\n  padding: 0px 24px;\n  box-sizing: border-box;\n  & * {\n    user-select: none;\n    user-drag: none;\n  }\n`;\n\nconst CardContainer = styled.div`\n  width: 100%;\n`;\n\nconst CardBoby = styled.div<{ isOpened: boolean }>`\n  background: #ffffff;\n  border: 1px solid #efefef;\n  border-top: none;\n  padding: 24px;\n  box-sizing: border-box;\n  border-radius: 0 0 12px 12px;\n  div:first-child {\n    margin-top: 0px;\n  }\n`;\n\nconst HeaderIcon = styled.img<{ pinned: boolean }>`\n  width: 22px;\n  height: 22px;\n  margin: auto 0;\n  &:hover {\n    cursor: ${(props) => (props.pinned ? 'not-allowed' : 'grab')};\n  }\n  &:active {\n    cursor: ${(props) => (props.pinned ? 'not-allowed' : 'grabbing')};\n  }\n`;\n\nconst TitleBox = styled.div`\n  font-weight: 600;\n  font-size: 18px;\n  display: flex;\n  margin-left: 20px;\n`;\n\nconst Title = styled.span`\n  margin: auto 0;\n  margin-left: 16px;\n  padding-top: 2px;\n`;\n\nconst TitleIcon = styled.img`\n  width: 24px;\n  height: 24px;\n  margin: auto 0;\n`;\nconst Trash = styled.img`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  padding: 10px;\n  right: 64px;\n  top: 9px;\n  transition: opacity 0.3s;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst Down = styled.img<{ isOpened: boolean }>`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  padding: 10px;\n  right: 22px;\n  top: 9px;\n  transition: transform 0.4s;\n  &:hover {\n    cursor: pointer;\n  }\n  ${(props) =>\n    props.isOpened &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\ninterface Cardprops {\n  title: string;\n  children: any;\n  pinned?: boolean;\n  icon?: string;\n  onRemove: (event: React.MouseEvent<HTMLElement>) => void;\n  isCardOpened?: boolean;\n  blockId?: string;\n}\n\nexport const Card = (props: Cardprops) => {\n  const dispatch = useDispatch();\n  const isCardOpened = props.isCardOpened ?? false;\n  return (\n    <CardContainer>\n      <CardHeader isOpened={isCardOpened}>\n        <HeaderIcon\n          pinned={props.pinned ? true : false}\n          src={props.pinned ? icon.Pin : icon.Movable}\n          alt=''\n        />\n        <TitleBox>\n          <TitleIcon src={props.icon} alt='' />\n          <Title>{props.title}</Title>\n        </TitleBox>\n        <Trash src={icon.Trash} alt='' onClick={props.onRemove} />\n        <Down\n          src={icon.Down}\n          alt=''\n          isOpened={isCardOpened}\n          onClick={() => {\n            dispatch(toggleCardState(props.blockId ?? ''));\n          }}\n        />\n      </CardHeader>\n      {isCardOpened && (\n        <CardBoby isOpened={isCardOpened}>{props.children}</CardBoby>\n      )}\n    </CardContainer>\n  );\n};\n"],"names":["blockId","onRemove","useSelector","state","selectBlockById","id","template","data","isCardOpened","styleOptions","getStyleOptions","currentStyle","getCurrentStyleOption","dispatch","useDispatch","useState","navTitle","setNavTitle","style","setStyle","leftText","value","setLeftText","rightText","setRightText","title","pinned","icon","required","onChange","e","target","updateBlockData","field","guideline","placeholder","options","updateTemplate","newTemplate","CardHeader","styled","props","isOpened","CardContainer","CardBoby","HeaderIcon","TitleBox","Title","TitleIcon","Trash","Down","css","Card","src","alt","onClick","toggleCardState","children"],"sourceRoot":""}